C√≥digos pequenos‚Ä¶ e √∫teis! ‚Äì Parte 1 ‚Äì  TVARV
Autor: Mauricio Cruz
Data: 20/01/2011 18:16

√â galera! Eu e o Mauro estamos um pouco ausentes porque estamos preparando uma sequ√™ncia de posts
bem
interessantes üôÇ .
C√≥digos simples e √∫teis que todo mundo precisa no dia-a-dia. Chega de ficar escrevendo aquele
mesmo
peda√ßo de c√≥digo toda semana.
Eu terminei o primeiro hoje, e acredito que ainda ter√£o mais ou menos umas 6 ou 7 partes, antes de somarmos todos os c√≥digos e gerarmos algo parecido com a
ABAP Zombie Screen Examples
.
Ent√£o vamos l√°!
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-
TVARV
!¬†Aff,
cansei
de fazer aquele mesmo select, aquela mesma l√≥gica para pegar os dados do range‚Ä¶ Ent√£o eu fiz uma classe simplezinha para buscar valores da TVARV.
O que? Voc√™ n√£o sabe o que √© TVARV?
TVARV: Tabela de par√¢metros do SAP, para ser utilizada pelos projetos. A id√©ia √© ter a maioria dos parametr√¥s que podem ser alterados durante o funcionamento do programa num s√≥ local, evitando assim, retrabalho desnecess√°rio em programas custom.
O c√≥digo fica assim:
REPORT z_tvarv.

* Essa √© a include que cont√©m a classe de acesso √† TVARV
INCLUDE zaz_tvarv.

* Parametro e Range de Exemplo
DATA: p_param TYPE char10.
DATA: r_range TYPE RANGE OF char10.

* Objeto da TVARV
DATA: o_tvarv TYPE REF TO lcl_tvarv.

*--------------------------------------------------------------------*
* START-OF-SELECTION
*--------------------------------------------------------------------*
START-OF-SELECTION.

* Aqui estamos criando o Objeto e acessando a TVARV.
* PREFIX: valor que vem antes do separador. Exemplo: em GAP1-VARIAVEL1
*         o valor de PREFIX seria GAP1, pois todas as vari√°veis devem
*         iniciar com GAP1 para o programa GAP1.
* SEPARATOR: O Separador. N√£o precisa de exemplo n√©? :P
*-----------------------------------------------------------*
  CREATE OBJECT o_tvarv
    EXPORTING
      prefix    = 'AUDI' "Exemplo de Prefixo
      separator = '_'.

* Busca Valor de um para√¢metro simples.
  o_tvarv->get_parameter(
   EXPORTING
     suffix = 'KONTENPLAN' "Sufixo qualquer de Par√¢metro
   IMPORTING
     value  = p_param ).

* Busca os Valor de um SelOption da TVARV, e ainda monta o range.
* Agora ficou f√°cil :D
  o_tvarv->get_seloption(
   EXPORTING
     suffix = 'KONTENPLAN' "Sufixo qualquer de Select Option
   IMPORTING
     value = r_range ).
E a include? Relax, aqui est√° o c√≥digo:
ABAP_ZOMBIE_GEAR-TVARV.txt
A id√©ia √© bem simples, e funciona para qualquer tipo de acesso que voc√™ precise para a TVARV. Eu pretendo, no futuro, expandir essa l√≥gica para gravar valores na TVARV, ¬†e tamb√©m para retornar valores de mais de um prefixo. Mas o que est√° feito, j√° ajuda üòÄ
Precisou de tvarv nos pr√≥ximos programas? √â s√≥ colocar INCLUDE zaz_tvarv.
* Ali√°s! O ZAZ n√£o √© de zueira, √© de Z ABAP ZOMBIE!
Abra√ßos!



Coment√°rios:
Adriano de Oliveira Colenghi Baptista (17/03/2023 10:23): Ol√°. D√∫vida: * Essa √© a include que cont√©m a classe de acesso √† TVARV INCLUDE zaz_tvarv. Onde temos o c√≥digo desse include?
Marcelo (25/02/2016 15:20): Gostei muito desse Post. J√° coloquei nas minhas anota√ß√µes para usa-la..!!! abra√ßo
Vanessa (11/06/2014 10:04): Parabens pelo blog! Muito interessante e produtivo. Linguagem simples at√© pra quem n√£o entende nada de programa√ß√£o. Posso isugerir um post? Como fazer uma boa especifica√ß√£o funcional para um ABAP? Sou consultora junior e acredito que isso iria ajudar bastante tanto consultores quanto abaps. Obrigada,
  Mauricio Cruz (11/06/2014 10:29): Sugest√£o anotada Vanessa. Vlw!
  Mauricio Cruz (11/06/2014 10:29): Sugest√£o anotada Vanessa. Vlw!
Nuno Godinho (26/12/2011 08:43): Ol√° zombies!! Concordo que deve haver um lugar centralizado para guardar constantes mas n√£o sou  apologista de usar a TVARV para isso. Por uma √∫nica raz√£o: a tabela, tendo apenas um identificador (NAME), n√£o permite fazer uma organiza√ß√£o decente das constantes. Para mim a solu√ß√£o ideal passa por uma tabela (Z) cuja chave permita identificar: 1. contexto ‚Äì RICEF ou nome do programa ou desenvolvimento que usa as constantes. que pode bem ser um nome gen√©rico nos casos em que ser√£o usadas em v√°rios s√≠tios); 2. campo ‚Äì nome do campo que vai usar estes valores (ex: BUKRS); 3. ocorr√™ncia ‚Äì permite distinguir mais do que uma ocorr√™ncia do mesmo campo no mesmo contexto. Por exemplo, dentro de um programa podemos fazer uma coisa se o BUKRS for 1111 e outra coisa se o BUKRS for 2222 ou 3333. Que para simplificar pode ficar vazio nos casos de ser apenas uma; 4. linha ‚Äì para poder guardar RANGES, permitir m√∫ltiplas linhas para cada ocorr√™ncia. E depois √© s√≥ definir uma classe que fa√ßa para esta tabela Z o mesmo que a que voc√™s definiram faz para a TVARV. Mas assim permite que a coisa fique mais organizada‚Ä¶ e a longo prazo dar√° frutos :)) Abra√ßos, Nuno
maurocesarsl (26/01/2011 04:43): =D usei deste c√≥digo hoje‚Ä¶ testado √© funcionando.. pq reinventar a roda?! Dei logo um GET XD