ABAPZombie Guide to ABAP ‚Äì Parte 19 ‚Äì CALL FUNCTION
Autor: Mauricio Cruz
Data: 21/03/2011 10:21

CALL FUNCTION
, comando usado em 10 de cada 6 programas em ABAP.
O que ele faz? √â s√≥ colocar CALL FUNCTION no Google Translation (en para pt) que vc descobre! üôÑ
Bom, basicamente o comando serve para efetuar a chamada de qualquer fun√ß√£o presente na transa√ß√£o SE37, como segue:
REPORT  zaz_call_function.

* Chamada Simples de Fun√ß√£o
CALL FUNCTION 'POPUP_TO_INFORM'
  EXPORTING
    titel         = 'Zumbis Est√£o Atacando!'
    txt1          = 'Cuidado com o Ataque de Zumbis.'
    txt2          = 'Ele ir√° ocorrer hoje, √†s 18h.'
          .
Voc√™,
tem
que listar os par√¢metros obrigat√≥rios que estiverem na descri√ß√£o da fun√ß√£o na SE37 (importing/exporting/tables) quando usar este comando.
Uma coisa que n√£o √© obrigat√≥ria na chamada da fun√ß√£o
mas deve ser usada
s√£o as EXCEPTIONS, que correspondem ao tratamento dos diversos erros que a fun√ß√£o pode retornar (usando o comando RAISE EXCEPTION).
Caso a fun√ß√£o retorne um erro, o c√≥digo da EXCEPTION ser√° transportado para a vari√°vel de sistema SY-SUBRC, e voc√™ pode tratar o erro adequadamente.
Importante:
Caso voc√™ n√£o liste as EXCEPTIONs no programa que est√° dando o CALL FUNCTION, e a fun√ß√£o disparar uma exce√ß√£o o seu programa ir√°
‚Äúdumpar‚Äù
. Como voc√™ n√£o gosta de dumps, use sempre as exceptions üòâ
REPORT  zaz_call_function.

DATA: t_dados TYPE TABLE OF string.

* Chamada da Fun√ß√£o listando os Execeptions e tratando os
* erros com as mensagens padr√£o do sistema
CALL FUNCTION 'GUI_UPLOAD'
  EXPORTING
    filename                = 'C:teste.txt'
  TABLES
    data_tab                = t_dados
  EXCEPTIONS
    file_open_error         = 1
    file_read_error         = 2
    no_batch                = 3
    gui_refuse_filetransfer = 4
    invalid_type            = 5
    no_authority            = 6
    unknown_error           = 7
    bad_data_format         = 8
    header_not_allowed      = 9
    separator_not_allowed   = 10
    header_too_long         = 11
    unknown_dp_error        = 12
    access_denied           = 13
    dp_out_of_memory        = 14
    disk_full               = 15
    dp_timeout              = 16
    OTHERS                  = 17.
IF sy-subrc <> 0.
  MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
O comando CALL FUNCTION tamb√©m possue outras particularidades, vejamos:
RFCs
: Voc√™ pode usar o comando CALL FUNCTION para chamar fun√ß√µes de outros sistemas SAP, desde que haja uma conex√£o configurada entre os dois sistemas e fun√ß√£o for do tipo ‚ÄúRFC‚Äù (configur√°vel na primeira aba da SE37) no sistema destino. Chamamos essa ‚Äúconex√£o‚Äù de
DESTINATION
, e √© atrav√©s dele que o SAP sabe onde deve conectar-se para executar a fun√ß√£o. Exemplo:
REPORT  zaz_call_function.

* Declara√ß√£o de Vari√°veis
DATA: t_dados TYPE TABLE OF string,
      v_dest  TYPE char10.

* Nome do DESTINATION (criado pela transa√ß√£o SM59)
v_dest = 'QAS_200'.

* Chamada de RFC
* Neste caso, a fun√ß√£o abaixo ser√° executada no ambiente
* QAS_200. A execu√ß√£o √© s√≠ncrona, ou seja, o SAP ir√°
* esperar o retorno dos dados para continuar a execu√ß√£o
* do programa.
CALL FUNCTION 'Z_RFC_ZUMBI'
  DESTINATION v_dest
  TABLES
    dados_selecionados    = t_dados
  EXCEPTIONS
    communication_failure = 1 "Exception de RFC
    system_failure        = 2. "Exception de RFC
No caso acima, a fun√ß√£o foi executada no sistema caracterizado pelo destinado V_DEST, e n√£o no sistema onde o programa est√° rodando.
√â extremamente importante utilizar os EXCPETIONs especiais para chamadas de fun√ß√µes remotas
(Exceptions de RFC al√≠ em cima).
UPDATE TASK
: A chamada em UPDATE TASK de uma fun√ß√£o faz com que a fun√ß√£o n√£o seja executada automaticamente, mas sim guardada na mem√≥ria para ser executada dentro do work process de atualiza√ß√£o do sistema. Esse work process √© disparado quando um programa executa o comando
COMMIT WORK
. Se voc√™ chamar mais de uma fun√ß√£o em UPDATE TASK num mesmo programa, alguns par√¢metros que podem ser definidos na SE37 v√£o controlar a sequ√™ncia de execu√ß√£o da pilha.
Exemplo:
* Peguei o caso de uma transa√ß√£o standard, √© mais f√°cil de explicar
* O programa aqui √© o MJ1B1I01

      CALL FUNCTION 'J_1B_NF_DOCUMENT_PRINT' IN UPDATE TASK
           EXPORTING
                DOC_NUMBER         = DOCNUM
          EXCEPTIONS
               DOCUMENT_NOT_FOUND = 6
               MESSAGING_PROBLEM  = 7
               OTHERS             = 9.

* Esse programa faz parte da transa√ß√£o J1B1N, cria√ß√£o de Nota Fiscal.
* O sistema faz a chamada da fun√ß√£o que imprime a nota fiscal antes
* da nota ser criada, mas usa o UPDATE TASK, portanto
* a fun√ß√£o aqui s√≥ vai ser disparada depois que o COMMIT WORK
* for executado, o que, no cen√°rio da J1B1N indica que o doc.
* j√° foi gerado! Malandro, n√£o √© n√£o?
STARTING NEW TASK
: velho conhecido da galera adepta do paralelismo. Na verdade, a id√©ia aqui √© fazer a execu√ß√£o de uma fun√ß√£o RFC de modo ass√≠ncrono, ou seja, o programa chama uma fun√ß√£o de outro sistema e n√£o espera resposta. Por√©m, muita gente usa esse comando por a√≠ para chamar uma fun√ß√£o de modo ass√≠ncrono
dentro do pr√≥prio sistema
, abrindo assim v√°rias tasks que rodam em paralelo. Esse √© o esquema m√°gico paralelismo, que sempre assombra a vida de quem d√° manuten√ß√£o em programas malucos. Exemplo:
*&---------------------------------------------------------------------*
*& Report  ZMRC_TEST1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zaz_call_function.

* Declara√ß√£o de Vari√°veis
DATA: t_dados    TYPE TABLE OF string,
      v_dest     TYPE char10,
      v_taskname TYPE char10.

* Nome do DESTINATION (no caso aqui, apontado para o pr√≥prio sistema)
v_dest     = 'NONE'.

* Rodando uma fun√ß√£o em paralelo (3 tasks)
DO 3 TIMES.

  v_taskname = sy-index.

* Chamada da fun√ß√£o abrindo v√°rias tasks
  CALL FUNCTION 'Z_ZUMBI_PARALELO'
    DESTINATION v_dest
    STARTING NEW TASK v_taskname
    PERFORMING f_recebe_dados ON END OF TASK
    TABLES
      dados_selecionados    = t_dados
    EXCEPTIONS
      communication_failure = 1
      system_failure        = 2.

  IF sy-subrc <> 0.
    EXIT.
  ENDIF.

ENDDO.

*&---------------------------------------------------------------------*
*&      Form  F_RECEBE_DADOS
*&---------------------------------------------------------------------*
FORM f_recebe_dados USING taskname.

* Esse perform ser√° executando quando as tasks da fun√ß√£o
* Z_ZUMBI_PARALELO acabarem de rodar. Para pegar os resultados,
* ou seja, os valores que a fun√ß√£o retornou, use o comando abaixo:
  RECEIVE RESULTS FROM FUNCTION 'Z_ZUMBI_PARALELO'
    TABLES
      dados_selecionados  = t_dados.

ENDFORM.                    " F_RECEBE_DADOS
Lembrando que no caso acima, eu coloquei o DESTINATION apontando para o mesmo sistema onde o programa est√° rodando. Nada impede que voc√™ abra tasks num sistema destino. Ah, e o c√≥digo acima, obviamente, n√£o faz muito sentido funcionamente‚Ä¶ √© mais para mostrar os comandos mesmo. üôÇ
IN BACKGROUND TASK:
Muito parecido com o UPDATE TASK, no COMMIT WORK um programa que roda num Work Process em Background dispara a execu√ß√£o da(s) fun√ß√£o(s). Ele √© pouco usado em programas Z, mas o standard usa bastante para executar processos gigantes p√≥s-commit das transa√ß√µes.
Phew, terminei os mais usados. Aidna tem muitos outros tipos de chamadas de fun√ß√£o, mas acho que esses s√£o os mais usados para programas Z.
Abra√ßos a todos aqueles que j√° chamaram uma fun√ß√£o.



Coment√°rios:
Eduardo Ribeiro (23/08/2025 13:44): Importante lembrar que a fun√ß√£o precisa existir no sistema destino‚Ä¶
Henrique Dias (22/08/2013 15:12): Uma coisa interessante que eu descobri esses dias √© que voc√™ pode colocar a exce√ß√£o ERROR_MESSAGE em uma fun√ß√£o para suprimir as mensagens que ela exibiria. Muito √∫til para algumas fun√ß√µes metidas a bapi que mostram mensagem inv√©s de usar tabela de retorno.
  igor vilela (06/09/2013 15:39): so pra constar ‚Ä¶ interessante de mais seu comentario ‚Ä¶ porem explicar melhor ‚Ä¶ Ex. CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 0 OTHERS   = 22.
    Henrique Dias (24/09/2013 09:57): Usando seu exemplo ficaria assim: CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 1 OTHERS = 2.
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
    Henrique Dias (24/09/2013 09:57): Usando seu exemplo ficaria assim: CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 1 OTHERS = 2.
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
  igor vilela (06/09/2013 15:39): so pra constar ‚Ä¶ interessante de mais seu comentario ‚Ä¶ porem explicar melhor ‚Ä¶ Ex. CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 0 OTHERS   = 22.
    Henrique Dias (24/09/2013 09:57): Usando seu exemplo ficaria assim: CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 1 OTHERS = 2.
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
    Henrique Dias (24/09/2013 09:57): Usando seu exemplo ficaria assim: CALL FUNCTION ‚ÄòGUI_DOWNLOAD‚Äô EXPORTING FILENAME = LV_DIR TABLES DATA_TAB = LT_DATA EXCEPTIONS ERROR_MESSAGE = 1 OTHERS = 2.
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
      Henrique Dias (24/09/2013 10:18): A √∫ltima mensagem apresentada pela fun√ß√£o vai atualizar as vari√°veis SY-MSGID, SY-MSGTY, SY-MSGNO, SY-MSGV1, SY-MSGV2, SY-MSGV3 e SY-MSGV4.
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
        Thiago (10/12/2018 08:08): Boa Henrique! Excelente dica! J√° estava quase fazendo todo um paranau√™ pra rodar uma fun√ß√£o em background por causa de uma mensagem de erro. Valeu!
Kaio (08/04/2011 08:59): caso eu queira criar uma fun√ß√£o 'z' e colocar algumas exce√ß√µes quais codigos eu preciso inserir no texto fonte da fun√ß√£o?! grato
  Mauricio Cruz (11/04/2011 07:11): Fala Kaio! Primeiro voc√™ deve "declarar" a exist√™ncia da exce√ß√£o na aba "Exceptions" da SE37. Depois, voc√™ deve seguir o mesmo padr√£o de declara√ß√£o ali do exemplo da chamada da fun√ß√£o GUI_UPLOAD. E lembre-se de disparar a exce√ß√£o dentro da fun√ß√£o com o comando RAISE EXCEPTION, sempre que tiver um erro na execu√ß√£o da fun√ß√£o. Abra√ßos üôÇ
  Mauricio Cruz (11/04/2011 07:11): Fala Kaio! Primeiro voc√™ deve "declarar" a exist√™ncia da exce√ß√£o na aba "Exceptions" da SE37. Depois, voc√™ deve seguir o mesmo padr√£o de declara√ß√£o ali do exemplo da chamada da fun√ß√£o GUI_UPLOAD. E lembre-se de disparar a exce√ß√£o dentro da fun√ß√£o com o comando RAISE EXCEPTION, sempre que tiver um erro na execu√ß√£o da fun√ß√£o. Abra√ßos üôÇ
Rafael Vieira (24/03/2011 06:42): mano, vc √© um lixo "Zumbis est√£o atacando" foi foda kkkkkkkkkkkkkkkkkkkk O PERFORMING  ON END OF TASK √© √∫til hein, n√£o conhecia isso n√£o. Abra√ßo!
  Mauricio Cruz (24/03/2011 06:51): houeahehaoehaoh tem que zuar, sen√£o fica chato demais, p√¥ üòÄ abra√ßo!
  Mauricio Cruz (24/03/2011 06:51): houeahehaoehaoh tem que zuar, sen√£o fica chato demais, p√¥ üòÄ abra√ßo!