ABAPZombie Guide to ABAP ‚Äì Parte 22 ‚Äì CALL METHOD
Autor: Mauricio Cruz
Data: 06/04/2011 09:00

O CALL METHOD chama um m√©todo de uma classe. D√£r.
Mas, caro amigo que n√£o conhece OO, esse simples comando pode tornar-se ca√≥tico caso voc√™ fique perdido nos conceitos do
ABAP Objects
.
Portanto, vou passar por diversas formas de chamar um m√©todo com o CALL METHOD, inclusive chamadas din√¢micas.
Lembrando que eu, particularmente, n√£o utilizo a s√≠ntaxe do CALL METHOD pra quase nada, j√° que voc√™ pode omitir a palavra reservada e chamar o m√©todo de uma outra forma. Em todas as explica√ß√µes, vou colocar as duas formas, e voc√™ usa a que der na telha, beleza? üòâ
Vamos l√°!
1 ‚Äì Chamada de m√©todo de Inst√¢ncia, sem assinatura:
*--------------------------------------------------------------------*
* 1 - Chamada de m√©todo de Inst√¢ncia, sem assinatura:

* Chamada com o CALL METHOD
  CALL METHOD o_zombie->criar_zumbi_que_anda.

* Omitindo o CALL METHOD
  o_zombie->criar_zumbi_que_anda( ).
2 ‚Äì Chamada de m√©todo Est√°tico, sem assinatura
*--------------------------------------------------------------------*
* 2 - Chamada de m√©todo Est√°tico, sem assinatura

* Note o sinal de = para chamar itens est√°ticos
* Na chamada est√°tica, n√£o existe ref√™ncia da inst√¢ncia (O_ZOMBIE)
* mas sim da classe local LCL_ZOMBIE

* Chamada com o CALL METHOD
  CALL METHOD lcl_zombie=>criar_zumbi_estatua.

* Omitindo o CALL METHOD
  lcl_zombie=>criar_zumbi_estatua( ).
3 ‚Äì Chamada de m√©todo din√¢mico, sem assinatura:
*--------------------------------------------------------------------*
* 3 - Chamada de m√©todo din√¢mico, sem assinatura:

* Sim, d√° pra chamar m√©todos de forma din√¢mica
* S√≥ n√£o d√° para omitir o CALL METHOD nas chamadas din√¢micas.

  DATA: l_metodo TYPE char30.

  l_metodo = 'CRIAR_ZUMBI_ESTATUA'.

  CALL METHOD o_zombie->(l_metodo).

  l_metodo = 'CRIAR_ZUMBI_QUE_ANDA'.

  CALL METHOD o_zombie->(l_metodo).

* E os par√¢metros? √â s√≥ escrever, o compilador ignora a s√≠ntaxe
* dos par√¢metro de m√©todos din√¢micos. Escreva direito ou DUMP! :)
4 ‚Äì Chamada de m√©todo de Inst√¢ncia, com par√¢metro de importa√ß√£o e exporta√ß√£o:
*--------------------------------------------------------------------*
* 4 - Chamada de m√©todo de Inst√¢ncia, com par√¢metro de
* importa√ß√£o e exporta√ß√£o:

  DATA: l_comeu TYPE char1.

* Sem omitir o CALL METHOD, fica bem parecido com o CALL FUNCTION
  CALL METHOD o_zombie->comer_cerebros
    EXPORTING
      p_quantidade = '4'
    IMPORTING
      p_comeu      = l_comeu.

* Omitindo, vc escreve os par√¢metros dentro dos ( )
  o_zombie->comer_cerebros( EXPORTING
                             p_quantidade = '0'
                            IMPORTING
                             p_comeu      = l_comeu ).
5 ‚Äì Chamada de m√©todo de Inst√¢ncia, com par√¢metro retorno:
*--------------------------------------------------------------------*
* 5 - Chamada de m√©todo de Inst√¢ncia, com par√¢metro retorno:

  DATA l_balas TYPE char30.

* Returning parece o EXPORTING, mas m√©todo s√≥ podem retornar UM
* param√™tro, e nenhum mais.  Lembrando que retornar <> exportar
* para m√©todos, hehehehehehe

* T√¥ com medo, me d√° muni√ß√£o pra matar zumbi
  CALL METHOD o_zombie->me_da_municao
    RECEIVING
      p_balas = l_balas.

  WRITE: / l_balas.

* E o jeito m√°gico de receber direto na vari√°vel.
* Na chamada do m√©todo abaixo, vale o que eu expliquei nos t√≥picos
* anteriores
  l_balas = o_zombie->me_da_municao( ).

  WRITE: / l_balas.

* Voc√™ pode receber o valores de um par√¢metro RETURNING direto numa
* vari√°vel do mesmo tipo do par√¢metro. (H) -> CTRL+C CTRL+V no MSN
6 ‚Äì Chamada de m√©todo de Inst√¢ncia, com exce√ß√µes:
*--------------------------------------------------------------------*
* 6 - Chamada de m√©todo de Inst√¢ncia, com exce√ß√µes:

  CALL METHOD o_zombie->me_da_uma_bazuca
    EXCEPTIONS
      nao_tem = 1.

  IF sy-subrc <> 0.
    WRITE: / 'Se vira com a DOZE, campe√£o!'.
  ENDIF.

  o_zombie->me_da_uma_bazuca( EXCEPTIONS nao_tem = 1 ).

  IF sy-subrc <> 0.
    WRITE: / 'Se vira com a DOZE, campe√£o!'.
  ENDIF.
Acredito que esses s√£o os modos mais usados. Para as chamadas com par√¢metros, tudo que est√° escrito na explica√ß√£o dos m√©todos de inst√¢ncia, vale para os m√©todos est√°ticos e na chamada din√¢mica.
N√£o vou falar de Classes de Exce√ß√µes aqui, isso provavelmente vai estar no post do comando CATCH.
E se voc√™ quiser executar os comandos acima, n√£o precisa ficar dando CTRL+C CTRL+V n√£o camarada:
clique aqui para baixar o TXT com todo o c√≥digo
, al√©m de poder ver meus coment√°rios inf√¢mes e malucos üôÇ
Abra√ßos!



Coment√°rios:
Thiago Freu (04/04/2013 14:54): HAHAHAHAHHAHAHAHA Simplesmente o melhor: ‚ÄúWRITE: / ‚ÄòSe vira com a DOZE, campe√£o!‚Äô.‚Äù Post show de bola d+! Muito simples de pegar o conceito e com um humor ninja! Parab√©ns mesmo!!! =D
L.Chada (12/07/2012 14:50): Ainda n√£o estava completamente convencido a entrar de cabe√ßa no OO‚Ä¶ √â at√© engra√ßado, mas as vezes a gente precisa de s√≥ mais um detalhe, um pequeno argumento para se render! * E o jeito m√°gico de receber direto na vari√°vel. l_balas = o_zombie->me_da_municao( ). De agora pra frente, compromisso assumido, novos desenvolvimentos s√≥ em OO!
Vinicius Ostan (16/12/2011 14:03): Como sempre, nos ajudando forma clara e divertida‚Ä¶. Muito obrigado!!!