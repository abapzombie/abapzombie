Hardcode, Constantes, C_Xs e derivados / ABAPZombie Guide 28 ‚Äì CONSTANTS
Autor: Mauricio Cruz
Data: 01/09/2011 08:00

Este post vai al√©m de uma explica√ß√£o de um comando‚Ä¶
Voc√™ j√° viu alguma vez em algum c√≥digo fonte a seguinte declara√ß√£o?
REPORT zombie_constante_idiota.

CONSTANTS: c_x TYPE c value 'X'.
üëø
O QUE?
VOC√ä J√Å ESCREVEU ISSO ALGUMA VEZ NO C√ìDIGO?
üëø üëø üëø
Neste post vamos entender para que serve este comando, e tamb√©m entender porque constantes s√£o √∫teis. Quem sabe, de uma vez por todas, o povo
PARE DE CRIAR CONSTANTES SEM MOTIVO
.
O comando CONSTANTS √© usado na declara√ß√£o de constantes, ou seja, vari√°veis com uma tipagem fixa e com um valor que nunca ir√° mudar em tempo de execu√ß√£o.
Exemplo:
REPORT zombie_constants.

CONSTANTS c_tipo_doc TYPE char4 VALUE 'WXYZ' .
Voc√™ pode usar a vari√°vel c_tipo_doc tendo a certeza de que seu valor nunca ser√° alterado em tempo de execu√ß√£o. Voc√™ pode at√© criar uma ‚Äúestrutura constante‚Äù:
REPORT zombie_constants_estrutura.

CONSTANTS: BEGIN OF c_estrutura,
‚Ä®            valor1 TYPE i VALUE '123',
‚Ä®            valor2 TYPE n VALUE '2',‚Ä®
            valor3 TYPE c VALUE 'A',
‚Ä®           END OF c_estrutura.‚Ä®‚Ä®

WRITE c_estrutura-valor1.
Ok, isso acaba com a explica√ß√£o. Vamos agora √† pergunta do milh√£o‚Ä¶
PORQU√ä EU DEVO USAR UMA CONSTANTE?
Imagine que voc√™ tem que fazer um programa que ir√° mostrar dados de uma deteminada empresa, e voc√™ ter√° que usar este c√≥digo de empresa para fazer diversas sele√ß√µes e valida√ß√µes dentro do c√≥digo.
Se voc√™ sair escrevendo
literalmente
o valor desta empresa no c√≥digo ‚Äì por exemplo,
IF empresa = ‚ÄòZMB1‚Äô
‚Äì o seu c√≥digo vai funcionar, mas se algum dia o c√≥digo dessa empresa mudar de ZMB1 para ZMB2 voc√™ vai ter que
alterar o c√≥digo INTEIRO
por conta de uma simples troca de valores.
Ao inv√©s de espalhar o valor ZMB1 pelo c√≥digo inteiro, voc√™ pode criar uma constante ‚Äì por exemplo
C_EMPRESA
com o valor ZMB1 ‚Äì e, se um dia o c√≥digo mudar, voc√™ pode alterar somente UMA linha de c√≥digo, para que seu programa fique correto e use o novo c√≥digo de empresa.
HARDCODE E A BANALIZA√á√ÉO DAS CONSTANTES
Quem falou que programadores deveriam evitar hardcodes foi
s√°bio
. Mas em momento algum ele disse que
TODO VALOR ESCRITO LITERALMENTE NO C√ìDIGO √â UMA CONSTANTE
. Eu cansei de ver constantes C_X = ‚ÄòX‚Äô espalhadas por c√≥digos fontes. Isso √© uma estupidez, porque o c√≥digo fica horr√≠vel de ler, e o
valor da vari√°vel n√£o vai poder ser mudado nunca MESMO
. Exemplo:
PARAMETERS: p_docto AS CHECKBOX,
            p_users AS CHECKBOX,
            p_soma  AS CHECKBOX.

CONSTANTS c_x TYPE c VALUE 'X'.

IF p_docto = c_x.
* Valida√ß√µes
ENDIF.

IF p_users = c_x.
* Valida√ß√µes
ENDIF.

IF p_soma <> c_x.
* Valida√ß√µes
ENDIF.
Se voc√™ mudar o valor de c_x para vazio,
isso n√£o quer dizer que todos os lugares onde C_X est√° sendo usado TEM de ser alterados
. Ou seja, voc√™ criou uma vari√°vel que n√£o precisava ser criada, que voc√™ nunca vai mudar o valor dela na declara√ß√£o, e que deixou o seu c√≥digo irritantemente mais chato de ler.
Pode parecer besta se eu colocar s√≥ contante burra de exemplo, mas eu j√° v√≠ reports com mais de 20 contantes que n√£o precisavam estar ali‚Ä¶ e isso √© um
SACO
para dar manuten√ß√£o e debuggar. Eu j√° v√≠ at√© projetos que obrigavam que voc√™ criasse constantes para todos os valores que voc√™ tivesse no c√≥digo‚Ä¶
Uma s√≥ palavra quando eu vejo C_X e derivados no c√≥digo:
ZUADO.
PIOR
√© que eu j√° vi c√≥digos onde a pessoa criou uma outra constante ‚Äúesperta‚Äù, j√° que n√£o podia alterar o valor da C_X:
PARAMETERS: p_docto AS CHECKBOX,
            p_users AS CHECKBOX,
            p_soma  AS CHECKBOX.

CONSTANTS c_x     TYPE c VALUE 'X',
           c_space TYPE c VALUE ' '.

IF p_docto = c_x.
* Valida√ß√µes
ENDIF.

IF p_users = c_space.
* Valida√ß√µes
ENDIF.

IF p_soma <> c_x.
* Valida√ß√µes
ENDIF.
FUUUUUUUUUUUUUUUUUUUUUUUU
OUTRO TIPO DE CONSTANTE BURRA
Colocar no nome da constante o mesmo que o valor dela √© outro exemplo de constante BURRA e ABOMIN√ÅVEL:
CONSTANTS c_ZMB1 TYPE CHAR4 VALUR 'ZMB1'.
Se um dia mudar ‚ÄòZMB1‚Äô para ‚ÄòZMB2‚Äô vai ficar f√°cil de entender que eu estou usando a C_ZMB1 num IF, mas, na verdade, ela vale ZMB2‚Ä¶
Vamos dar um nome para esse tipo de constante:
Abomin√°vel Constante das Neves
MAS E A√ç, QUANDO EU SEI QUE TENHO QUE USAR UMA CONSTANTE?
Vale o bom senso e a correta an√°lise da regra de neg√≥cio.
Se voc√™ tem um valor que voc√™ sabe que vai ser usado em diversos pontos do programa, que o cliente/funcional n√£o deve nunca poder mudar sem requisitar uma altera√ß√£o na especifica√ß√£o, e que importa para o PROCESSO do desenvolvimento (tipo de documento, uma empresa, um n√∫mero de conta cont√°bil, milh√µes de exemplos aqui), use uma constante.
Se o caso for igual ao acima, mas o cliente/funcional podem querer alterar ou expandir os valores, v√° de TVARV (vou explicar sobre a TVARV num post futuro).
Por√©m, se o seu caso n√£o se encaixar neste dois, ou for usado somente em um lugar do c√≥digo‚Ä¶
coloque o valor literal e seja feliz.
üôÇ
Abra√ßos √† todos aqueles que j√° discutiram com pessoas que acreditam que o uso de C_X em c√≥digos com mais de 10mil linhas √© correto.
üòâ



Coment√°rios:
Vivian (05/04/2013 11:37): Muito bom! Eu mesmo usava isso pensando que estava correto, n√£o por ter a ‚Äús√≠ndrome do rob√¥‚Äù, mas por simplesmente pensar que era melhor e pronto, sem pensar no real uso de constants. √ìtima explica√ß√£o e com certeza irei levar para toda a vida! rsrs
Paulo Rios (21/09/2011 07:18): Cara, muito bom esse post. J√° declarei muita constante burra por que o QA enche o saco. √â rid√≠culo mas o C_X √© bem freq√ºente nos programas que vejo. Agora vou evitar ao m√°ximo e indicar esse post aos que ainda relutam em criar constantes burras‚Ä¶ Abra√ßos!
Mauro Laranjeira (20/09/2011 14:58): Galera, S√≥ para lembrar, aqui no abapzombie tem uma classe para auxiliar nas sele√ß√µes de par√¢metro da STVARV, segue o link: http://www.abapzombie.blog.br/dicas-abap/2011/01/ ‚Ä¶ Segue o tuto de como criar migrar uma classe local para uma global: http://www.abapzombie.blog.br/dicas-abap/2011/01/ ‚Ä¶ Sem zombizadas galera =D Abs, Mauro
Julio (19/09/2011 11:41): Cara, eu tamb√©m j√° passei por essa de TER que colocar C_X‚Ä¶ Tantas vezes que j√° peguei esse v√≠cio maldito e lembro de diversos c√≥digos meus polu√≠dos por constantes burras‚Ä¶
Fl&aacute;vio Furlan (13/09/2011 14:11): Uma explica√ß√£o que ouvi uma vez para o uso de C_X ou C_ZMB1 √© que a empresa usava um programa para detectar literais no c√≥digo e com as aberra√ß√µes acima o programador enganava esse programa e assim evitava a dor de cabe√ßa de ficar justificando o uso do "X" como hard code! Ainda acho que a sugest√£o do F√°bio muito boa. Eu mesmo adotei at√© nos treinamentos que ministro o uso de abap_true e abap_false. Abs!
Custodio (01/09/2011 17:29): abap_true e abap_false sao (boas) gambetas da SAP ja que o ABAPao nao tem "booleans reais". acho que de todos os exeplos do post o pior eh o tal de c_zmb1.
Mauro Laranjeira (01/09/2011 15:27): Uma vez alterei um programa gigante que tinha constantes burras, fiquei na duvida se mudava tamb√©m o nome da constante rsrsrs, deu muito trabalho, mas fiz o melhor que pude rsrs‚Ä¶
F&aacute;bio Pagoti (01/09/2011 10:34): Sem d√∫vida, muito ABAPeiros tem essa mania e que acaba sendo contagiosa (j√° fiz muita constante burra ‚Äì e n√£o por op√ß√£o). Caso algu√©m n√£o esteja convencido de que este post tem total sentido, economize ao menos o c_x e o space (ou c_space) pelas constantes abap_true e abap_false. Abra√ßos!
  Mauricio Cruz (01/09/2011 11:27): Sim! Acho que quase todas as liguagens tem uma constante j√° pronta para true ou false, e para o ABAP n√£o √© diferente. E eu tamb√©m j√° fui obrigado a fazer constantes burras, mas isso n√£o durou muito ‚Äì e acho que por isso que eu j√° entrei em tantas discuss√µes en√©rgicas sobre hahaha
  Mauricio Cruz (01/09/2011 11:27): Sim! Acho que quase todas as liguagens tem uma constante j√° pronta para true ou false, e para o ABAP n√£o √© diferente. E eu tamb√©m j√° fui obrigado a fazer constantes burras, mas isso n√£o durou muito ‚Äì e acho que por isso que eu j√° entrei em tantas discuss√µes en√©rgicas sobre hahaha
ABAP da Depress&amp;atil (01/09/2011 07:50): Isso √© realmente uma das coisas mais simples e irritantes que existem, n√£o s√≥ em ABAP como em qualquer linguagem. E usar a TVARV acaba com aqueles chamados abertos s√≥ pra alterar um C_BUKRS ou C_WERKS. Al√©m disso, C_X √© um absurdo quando usado para testar flags‚Ä¶ custa usar NOT ‚Ä¶ IS INITIAL?
  Mauricio Cruz (01/09/2011 07:57): Eu, particularmente, gosto de uma que eu vi uma vez: c_aeiou Bonito o nome, n√©? hahahahaha
  Mauricio Cruz (01/09/2011 07:57): Eu, particularmente, gosto de uma que eu vi uma vez: c_aeiou Bonito o nome, n√©? hahahahaha
Daiane (01/09/2011 06:34): Voc√™ disse tudo!!!!!! Tamb√©m acho que houve uma banaliza√ß√£o das constantes‚Ä¶ e da√≠ vem a "s√≠ndrome do rob√¥" e n√£o analisa a real necessidade do hardcode. Eu j√° briguei, bati o p√©, pois no QA queriam que eu retirasse os hardcodes 'X'‚Ä¶. AHHHHHHH!!!!! Mas, como eu tenho ju√≠zo eu obede√ßo (mesmo totalmente contrariada) rsrs
  Mauricio Cruz (01/09/2011 07:58): Aposto que deve ter gente que j√° declara um C_X quando inicia um report, tenho CERTEZA! hahaahahah
  Mauricio Cruz (01/09/2011 07:58): Aposto que deve ter gente que j√° declara um C_X quando inicia um report, tenho CERTEZA! hahaahahah
Gustavo (01/09/2011 05:19): Show de bola esse post!