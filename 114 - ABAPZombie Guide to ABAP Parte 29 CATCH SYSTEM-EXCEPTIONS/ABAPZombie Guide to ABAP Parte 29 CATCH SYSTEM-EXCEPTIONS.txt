ABAPZombie Guide to ABAP ‚Äì Parte 29 ‚Äì CATCH SYSTEM-EXCEPTIONS
Autor: Mauricio Cruz
Data: 12/12/2011 11:00

Voc√™ provavelmente j√° apertou F1 em um comando, e viu no final do help uma lista com as ‚Äú
Exceptions
‚Äù que o sistema pode disparar caso voc√™ n√£o utilize o comando corretamente. Aquela √© a famosa lista de
Runtime Errors
(dumps) do comando, com as informa√ß√µes devidas caso voc√™ queira prevenir a
‚ÄúException‚Äù
e trat√°-la dentro do seu programa (mas nem todas podem ser tratadas!).
Help do comando MOVE. Notem que a descri√ß√£o mostra a classe de exce√ß√£o e tamb√©m o nome dos Runtime Errors (dumps) que voc√™ pode tratar (e tamb√©m os que voc√™ n√£o pode tratar).
Nas vers√µes mais novas do AS (
Application Server
), essa lista vai mostrar as Classes de Exce√ß√£o por onde voc√™ deve capturar o erro, como na figura cima. O Mauro
fez um post
muito bom explicando como as Classes de Exce√ß√£o funcionam na Orienta√ß√£o √† Objetos, inclusive mostrando um caso de capturar uma exce√ß√£o do sistema para o comando
MOVE
.
Mas aqui eu quero mostrar o jeito mais antigo, velho, mais ROOTS e
obsoleto
de capturar exce√ß√µes disparadas pelo sistema. Tipo um trabalho hist√≥rico, manja? üòõ
Na figura ali de cima, al√©m de mostrar as Classes de Exce√ß√£o, o sistema tamb√©m nos motra o nome do
Runtime Error
de cada exce√ß√£o. Vamos for√ßar um deles:
REPORT  zombie_catch_system_exceptions.

DATA: vl_string TYPE char10,
      vl_numc   TYPE i.

vl_string = 'ABAPZOMBIE.BLOG.BR'.

MOVE vl_string TO vl_numc.
Se voc√™ executar o comando acima, o sistema vai disparar o seguinte
Runtime Error
:
Tela do DUMP para o comando MOVE, usado de forma errada.
Lembram-se que esse
Runtime Error
aparecia como ‚ÄúCatchable‚Äù no help do comando? Isso indica que podemos trat√°-lo utilizando o
CATCH-SYSTEM EXCEPTIONS
. Veja s√≥:
REPORT  zombie_catch_system_exceptions.

DATA: vl_string TYPE char10,
      vl_numc   TYPE i.

vl_string = 'ABAPZOMBIE.BLOG.BR'.

CATCH SYSTEM-EXCEPTIONS convt_no_number = 7.

  MOVE vl_string TO vl_numc.

ENDCATCH.

IF sy-subrc = 7.
  WRITE 'Erro no Move!'.
ENDIF.
Ou seja, voc√™ vai associar um n√∫mero para o return code (sy-subrc), exatamente como voc√™ j√° faz quando chama alguma fun√ß√£o. Ap√≥s o Catch, voc√™ trata o erro do jeito que achar melhor.
Eu usei o mesmo exemplo do
post do Mauro
de prop√≥sito. A id√©ia √© que voc√™ possa comparar as duas formas de capturar a exce√ß√£o, a antiga e a nova. Mas lembre-se que esta forma apresentada neste post, √© obsoleta nas vers√µes mais novas do SAP.
√â importante dizer para os mais novos que as exce√ß√µes existem por um motivo: voc√™ usou o comando de uma forma
que n√£o deveria ter usado
. O correto √© voc√™ entender o porque isso aconteceu e corrigir o c√≥digo, e
n√£o sair jogando CATCHs para todos os comandos.
Abra√ßos!



Coment√°rios:
Ivan (10/06/2013 10:47): Valeu mesmo! Eu estou trabalhando com ABAP a 8 meses (Junior) e tenho aprendido muito com esse site. Recentemente eu dei manuten√ß√£o num c√≥digo que tinha uma situa√ß√£o muito parecida com essa e eu n√£o sabia muito bem o que significava. Como ficar perguntando tudo para os mais sabidos aqui do trampo √© meio chato‚Ä¶.sempre venho navegar por esses lados e dessa vez foi bem no alvo! Estive pensando em colaborar de alguma maneira‚Ä¶se tiver como‚Ä¶avise. Abra√ßos e obrigado.
Mauro Laranjeira (12/12/2011 16:22): Muito bom Mauricio. Eu n√£o conhecia essa forma XD Abs,
  Mauricio Cruz (13/12/2011 10:49): √â n√≥is! Abra√ßos a todos aqueles que podiam me ajudar com essa saga. üôÑ
  Mauricio Cruz (13/12/2011 10:49): √â n√≥is! Abra√ßos a todos aqueles que podiam me ajudar com essa saga. üôÑ