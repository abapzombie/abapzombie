Decis√µes Pol√™micas, ou ‚ÄúComo entrar em discuss√µes com seus pares‚Äù
Autor: Mauricio Cruz
Data: 06/02/2012 15:33

MAMILOS, disse o ABAPer pol√™mico. (e se voc√™ n√£o entendeu nada, clique na imagem e veja o v√≠deo üôÇ )
No final do ano passado, em conversas com amigos que acompanham o ABAPZombie, eu disse para eles que iria tomar uma decis√£o pol√™mica para 2012. Pois finalmente chegou a hora de
mudar pra valer
. A partir desse ano eu estou
deixando de programar em ABAP de forma procedural, pelo menos para programas novos.
E voc√™ pode se juntar √† mim, se quiser arrumar
tretas
üòÄ
Notem que eu n√£o estou falando de colocar a l√≥gica ‚Äúprincipal‚Äù em classes, e deixar o resto de lado. √â praticamente tudo em OO mesmo. Se for para copiar algum c√≥digo de algum lugar, eu vou adaptar para o modelo de classes, tentando n√£o criar classes burras, obviamente. Eu tamb√©m n√£o vou
‚Äúcausar‚Äù
no c√≥digo dos outros, afinal, durante a resolu√ß√£o de erros eu provavelmente n√£o vou ter tempo para converter e adaptar as rotinas ‚Äì eu trabalho em clientes, e tenho prazos √† cumprir. Mas, para programas novos e criados por mim, vou utilizar 100% OO. Simples assim.
Que fique claro:
n√£o estou fazendo isso para ser ‚Äúcool‚Äù, a id√©ia √© fazer uma esp√©cie de laborat√≥rio, e relatar os resultados aqui no site. Acredito que ap√≥s alguns meses vou poder mostrar uma lista de pr√≥s e contras baseados nas minhas experi√™ncias. Essa tamb√©m √© uma forma de me desafiar no meu trabalho, sem ter que mudar de empresa ou de posi√ß√£o hier√°rquica. A decis√£o de como o c√≥digo vai ser escrito √© minha, e eu tenho que garantir a qualidade, n√£o importando qual estrutura meu programa vai seguir.
Voc√™ tamb√©m pode se juntar a mim, caso queira escutar
daquele
ABAP do cliente que o seu programa √© ‚Äúbizarro‚Äù e √© ‚Äúimposs√≠vel de dar manuten√ß√£o‚Äù. Sim, eu j√° escutei isso, mas o mais legal foi que, depois que eu expliquei, o cara ficou t√£o empolgado que foi estudar OO por conta. üòâ E vamos ser sinceros: se os seus programas s√£o 100% procedurais, qual o problema de criar programas 100% orientados √† objetos? Ah, e sem medinho ou pregui√ßa, o neg√≥cio √© re-inventar seu pr√≥prio trabalho, para n√£o cair na mesmice e acabar encostado üòÄ
Abra√ßos √† todos aqueles que casaram no √∫ltimo final de semana (parab√©ns Mauroooooo), e para todos aqueles que v√£o usar faixas do Rambo com as letras OO estampadas. Boa sorte. Para
todos
n√≥s.



Coment√°rios:
Gisele Oliveira (04/09/2012 11:58): Ent√£o, eu n√£o tenho muito conhecimento em OO‚Ä¶ Fa√ßo parte da leva de ABAPers que ainda se arrepia quando encontra um c√≥digo orientado. =( Mas j√° estou tentando me adaptar! Tenho estudado por aqui mesmo os conceitos e tentando aplicar no dia a dia. Ainda n√£o me arrisco num c√≥digo todo OO at√© mesmo pq ainda nem comecei a engatinhar nesse assunto‚Ä¶ Mas sei que a tend√™ncia √© essa e que quem n√£o se adaptar vai estar fora do mercado em muito pouco tempo!
will (17/02/2012 08:37): Legal, vou me render a essa pr√°tica‚Ä¶mas vai deixando seus ‚Äúcaminhos‚Äù por aqui, pra gente ir seguindo‚Ä¶
Giovanni Diniz Frois (13/02/2012 08:52): Id√©ia interessante.Estou aprendendo os conceitos de ABAP OO agora, ent√£o ainda n√£o tenho muita pr√°tica em como implementar estes conceitos nos desenvolvimentos do dia a dia.Vai ser interessante poder acompanhar sua experi√™ncia pelo blog. Quase apanhei em um projeto de implanta√ß√£o quando perguntei se iriam usar os conceitos de OO nos desenvolvimentos. =(
  Mauricio Cruz (13/02/2012 08:54): Pois voc√™ √© quem deveria ter batido! üôÇ
  Mauricio Cruz (13/02/2012 08:54): Pois voc√™ √© quem deveria ter batido! üôÇ
Jose Nunes (07/02/2012 23:45): Teve um projeto onde implementei todos os custom developments em ABAP OO. At√© hoje tem nego que d√° manuten√ß√£o no meu c√≥digo reclamando da ‚Äúcomplexidade‚Äù. Sabe o que √© mais triste? N√£o foi nenhum dinossauro-ABAPer vindo do COBOL. √â nego de 20 anos de idade que ainda tava cursando faculdade de sistemas.
  Mauricio Cruz (08/02/2012 07:11): Realmente isso √© muito triste. Eu costumo falar que boa parte do povo que trabalha com programa√ß√£o √© muito pregui√ßoso‚Ä¶ E eu ainda me pego pensando em como o cara pode ficar reclamando ao inv√©s de ir l√°, tentar entender e aprender alguma coisa.
  Mauricio Cruz (08/02/2012 07:11): Realmente isso √© muito triste. Eu costumo falar que boa parte do povo que trabalha com programa√ß√£o √© muito pregui√ßoso‚Ä¶ E eu ainda me pego pensando em como o cara pode ficar reclamando ao inv√©s de ir l√°, tentar entender e aprender alguma coisa.
Fl√°vio Furlan (07/02/2012 10:27): Eu lembro quando voc√™ me comentou sobre essa resolu√ß√£o e resolvi tamb√©m adotar. Acabei de publicar um post onde digo que no ABAP101 c√≥digo procedural n√£o entra mais! Al√©m do mais, at√© na minha turma de treinamento ABAP, est√° proibido procedural! Eu sou obrigado a ensinar come√ßando com procedural, mas ap√≥s as aulas de Orienta√ß√£o a Objetos, est√° proibido programar procedural. Um PERFORM j√° √© suficiente para eu colocar para fora da sala :-p ! Em outras linguagens n√£o temos mais essa discuss√£o besta! Experimenta comentar sobre isso num f√≥rum de Ruby ou qualquer outra linguagem decente. E mensagem para quem est√° migrando: ‚ÄúEvitem o primeiro gole‚Äù, ou seja, fa√ßam TUDO OO, n√£o caiam na tenta√ß√£o ‚Äúmas √© somente uma valida√ß√£o‚Äù. Abra√ßos! May the ABAP be with you! PS: aqui onde eu trabalho, programa√ß√£o procedural est√° proibido, acredita!
Fabio Pagoti (06/02/2012 21:24): Falando em codigo sem qualidade, pressa e procedural, ser√° que de tras dos panos da nova SDN agente acha codigo ABAP antigo e escrito em alemao? üòõ Acrescentando ao post, mesmo que fosse s√≥ para ser cool j√° √© prefer√≠vel OO. O procedural para mim j√° morreu e tem gente √≥rf√£ que n√£o se deu conta.
william (06/02/2012 20:14): Verdade‚Ä¶. mas, √© que te falo‚Ä¶Quinta-feira , pediram minha ajuda, pra pegar uma informa√ß√£o que estava na mem√≥ria do SAP‚Ä¶o colega  ABAP tinha achado o ‚Äúmonstro‚Äù, que era uma tabela com diversas tabelas dentro dela‚Ä¶fui dar um assign, e jogando em um field-symbol dentro de uma exit, mas o que era para ser uma tarefa simples, se mostrou um saco pelo tempo que passava e o gerente ligando pra encher o saco‚Ä¶ n√£o conseguia achar uma workarea compat√≠vel com o peda√ßo que eu queria daquela tabela louca (meu est√¥mago roncando de fome), fui quebrando em v√°rios peda√ßos o assign e mesmo assim n√£o estava a contento‚Ä¶ai cedi, e simulei o processo que deveria pegar da mem√≥ria por meio de fun√ß√£o Standard‚Ä¶Foi um desafio, (que arreguei, mas posso voltar a ver futuramente) s√≥ havia feito Assign simples de tabelas ‚Äúnormais‚Äù, mas o tempo teve que vencer sen√£o ia tomar na orelha.
william (06/02/2012 18:58): vige menino, que coragem‚Ä¶eu tinha feito uma entrevista na bbko que o cara faltou me engolir, porque falei que faria o que o Projeto/cliente pedia dependendo da prazo ( por exemplo, usando algo dito como ‚Äúantiquado‚Äù para alguns)‚Ä¶claro que algumas formas de programas ficam mais interessantes e melhores para reutilizar, mas quando o Gerente da conta grita no telefone para poder colocar algo na produ√ß√£o no mesmo dia, num d√° pra ‚Äútestar coisas novas‚Äù, vai no que vc domina mesmo‚Ä¶se puder, modifica depois. O aprendizado √© continuo. Hoje em dia me foco mais em aprender processos, pois percebo que existem muitos funcionais na d√∫vida do que precisa realmente ser feito e se existe determinada fun√ß√£o Standard que possa vir a ser utilizada.
  Mauricio Cruz (06/02/2012 19:52): Concordo que na hora do aperto a gente acaba usando o que a gente mais domina, por√©m, quem disse que essa coisa n√£o pode ser OO? Depois de usar por um tempo, talvez seja muito mais natural criar algo em OO ao inv√©s de criar de forma procedural. Mas s√≥ vai saber isso quem de fato for l√° e tentar usar OO como prioridade por um tempo.
  Mauricio Cruz (06/02/2012 19:52): Concordo que na hora do aperto a gente acaba usando o que a gente mais domina, por√©m, quem disse que essa coisa n√£o pode ser OO? Depois de usar por um tempo, talvez seja muito mais natural criar algo em OO ao inv√©s de criar de forma procedural. Mas s√≥ vai saber isso quem de fato for l√° e tentar usar OO como prioridade por um tempo.
Antelio Abe (06/02/2012 18:56): Simple words: Think Different Rocks! Go Ahead. http://www.youtube.com/watch?v=4oAB83Z1ydE