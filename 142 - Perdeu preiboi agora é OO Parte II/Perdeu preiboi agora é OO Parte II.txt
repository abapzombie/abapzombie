Perdeu preiboi, agora √© OO ‚Äì Parte II
Autor: Mauro Laranjeira
Data: 27/06/2012 10:42

Teste.. testando.. 123‚Ä¶ F8‚Ä¶ Ainda existe esperan√ßa, a PARTE II do ‚ÄúPerdeu preiboi, agora √© OO‚Äù. Antes de ler este post leia
Perdeu preiboi, agora √© OO ‚Äì Parte I
. Sem churumelas, vamos a parte t√©cnica sobre a cria√ß√£o de uma classe. Objetivos:
Criar um modelo de classe de uma pessoa;
Atributos: nome, idade, sexo;
A√ß√µes: fazer anivers√°rio, comer, acordar e dormir;
Regra: a idade de uma pessoa nunca pode retroceder e sempre acrescentar 1 quando o a pessoa fazer anivers√°rio;
Transa√ß√£o SE24, para criar a classe global.
Coloque a descri√ß√£o da classe, existe um flag ‚ÄúFinal‚Äù, ele quer dizer que esta classe n√£o pode ser herdada, nos pr√≥ximos posts, vamos ver o que isso quer dizer.
Os atributos s√£o as¬†caracter√≠sticas do nosso objeto. Na aba atributos, vamos criar os atributos, de proposito coloquei a visibilidade do atributo IDADE como publico, apenas para vermos a diferen√ßa.
Na aba de m√©todos, criamos as a√ß√µes do nosso objetos. Nesse exemplo criei todos os m√©todos com a visibilidade privada.
Cria√ß√£o dos m√©todos GET e SET. Mas o que s√£o estes m√©todos?! Como um padr√£o em varias linguagens de programa√ß√£o, usamos o m√©todos GET para ler a informa√ß√£o de um atributo. Utilizamos o m√©todo SET para inserir uma informa√ß√£o em um atributo. O atributo IDADE tem uma regra,¬†acrescentar um quando o m√©todo FAZER_ANIVERS√ÅRIO √© chamado, por este motivo n√£o criei o m√©todo SET_IDADE.
Selecionando um m√©todo podemos clicar no bot√£o ‚ÄúParameters‚Äù para inserir quais os¬†par√¢metros¬†de entrada e sa√≠da do m√©todo.
Existem 4 tipo de¬†par√¢metros para os m√©todos: Importing ‚Äì Entrada de um ou v√°rios valores; Exporting ‚Äì Sa√≠da de um ou v√°rios valores; Changing ‚Äì Altera√ß√£o por referencia, exatamente igual nos performs; Returning ‚Äì Sa√≠da de apenas um valor; ¬† Neste exemplo estamos implementando o m√©todo SET_NOME, este m√©todo ir√° receber um valor atrav√©s do¬†par√¢metro NOME que √© do tipo IMPORTING.
O valor recebido pelo par√¢metro NOME ir√° alimentar o atributo NOME. A referencia ‚Äúme‚Äù, quer dizer que irei atualizar o atributo da instancia atual, ou seja, irei atualizar o atributo NOME do objeto a qual estarei trabalhando. Neste caso ME->NOME (atributo da classe) recebe o valor que estiver em NOME (atributo do m√©todo).
O m√©todo FAZER_ANIVERSARIO apenas incrementa 1 para o atributo IDADE.
M√©todo GET_NOME retorna o valor do atributo NOME. Como ser√° apenas o retorno de um¬†par√¢metro estou usando o Returning.
O m√©todo, ‚Äúpega‚Äù o valor da instancia atual utilizando o ‚Äúme‚Äù e ‚Äújoga‚Äù no¬†par√¢metro¬†‚Äù NOME‚Äù.
M√©todo GET_IDADE, segue a mesma linha do m√©todo GET_NOME, ‚Äúpega‚Äù o valor da instancia atual utilizando o ‚Äúme‚Äù, e retorna para o par√¢metro IDADE.
Com a classe feita, vamos fazer a cria√ß√£o do programa na SE38.
Criei uma vari√°vel (O_PEDRO) com referencia da classe ZCL_PESSOA.
Quando dou o comando CREATE OBJECT, √© criado a instancia da classe ZCL_PESSOA, seguindo o conceito do
post anterior
a classe ZCL_PESSOA passa de ser apenas um modelo para ser uma instancia, ou seja, um objeto.
Antes do CREATE OBJETC a vari√°vel O_PEDRO n√£o tem uma instancia, ainda n√£o √© um objeto.
Ap√≥s o comando CREATE OBJECT a vari√°vel O_PEDRO passa a ter uma instancia, come√ßa a ser manipulada como um objeto.
Atributos com o sinal verde significa que s√£o¬†p√∫blicos.
Atributos com o sinal vermelho significa que n√£o privados.
Atributos com sinal amarelo (neste caso n√£o temos nenhum) significa que s√£o protegidos.
Utilizando o m√©todo SET_NOME, vamos inserir o nome ‚ÄúPedro‚Äù no objeto O_PEDRO.
Mas calma, ERROR, NNNN√É√É√ÉOOO‚Ä¶
√â amigo, j√° come√ßamos com o p√© esquerdo, criamos os m√©todos com visibilidade privada, ou seja, apenas a pr√≥pria classe poder√° utiliza-los. Modelagem √© a alma do negocio.
Vamos corrigir estas visibilidade alterando para ‚Äúpublic‚Äù.
Assim outros objetos tamb√©m poder√£o utilizar estes m√©todos.
Agora a coisa vai‚Ä¶
Aproveitando, inseri no c√≥digo outras a√ß√µes que est√£o na nossa classe.
Nosso objeto vai ‚Äúnascer‚Äù (ser instanciado), receber um nome, dormir, acordar e fazer anivers√°rio 3 vezes.
Com os 3 anivers√°rios, nosso objeto O_PEDRO ter√° 3 no atributo IDADE.
Comments: Entendeu o porque este paradigma de programa√ß√£o chama orientado a objetos? Fizemos nossa classe pensando apenas no objeto pessoa, n√£o pensamos em nenhum momento como a aplica√ß√£o vai funcionar, o que deve ser executado primeiro. A ideia da Orienta√ß√£o a Objetos √© essa, trabalhar apenas com o objeto de uma forma mais¬†gen√©rica, sendo assim, quando outro programa precisar trabalhar com pessoa, ter√° esta classe. Caso no futuro, a classe pessoa recebe alguma melhoria todos os programas que √† utilizam, ir√£o estar atualizadas.
Podemos ver no debugger.
O que?! Outro ERRO, NNN√É√É√ÉOOOOO‚Ä¶. Mas tinha compilado‚Ä¶
√â amigo, temos a regra ‚Äú
a idade de uma pessoa nunca pode retroceder e sempre acrescentar 1 quando o a pessoa fazer anivers√°rio
‚Äù que por um erro de modelagem pode ser burlada.
Vamos supor que um outro programador est√° usando a sua classe, ele n√£o conhece as regras para se trabalhar com pessoa.
Mas o outro programador viu que o atributo IDADE √© publico, sendo assim, n√£o ser√°¬†necess√°rio chamar o m√©todo FAZER_ANIVERSAIO para alterar o valor do atributo IDADE.
Sua regra acabou de ir para o espa√ßo. #FAIL
Porem, errando que se aprende‚Ä¶
Vamos alterar a visibilidade do atributo IDADE, sendo assim n√£o ser√° poss√≠vel alterar o valor da IDADE sem usar o m√©todo FAZER_ANIVERSARIO.
Agora temos que corrigir o programa, n√£o ser√° mais poss√≠vel um outro objeto acessar este par√¢metro.
Com a nossa classe melhor modelada para atender as nossas regras, podemos utilizar os m√©todos SETs e GETs para entender sua real necessidade.
REPORT z_teste_pessoa.

DATA: o_pedro TYPE REF TO zcl_pessoa.

DATA: idade TYPE numc2,
nome TYPE char30.

BREAK-POINT.

CREATE OBJECT o_pedro.

o_pedro->set_nome( 'Pedro' ).

o_pedro->dormir( ).
o_pedro->acordar( ).
o_pedro->comer( ).
o_pedro->fazer_aniversario( ).
o_pedro->fazer_aniversario( ).
o_pedro->fazer_aniversario( ).
o_pedro->fazer_aniversario( ).

nome = o_pedro->get_nome( ).
idade = o_pedro->get_idade( ).

WRITE: nome, idade.
Olhe esse exemplo para esse c√≥digo, podemos utilizar o mesmo ‚Äúmodelo‚Äù para trabalhar com N objetos.
Vai la Abap Espertinho, faz isso utilizando fun√ß√£o sem duplicar vari√°veis ou fazer logica tosca üòâ
REPORT  z_teste_pessoa.

DATA: o_pedro TYPE REF TO zcl_pessoa,
      o_ana   TYPE REF TO zcl_pessoa.

"Nasci Pedro
CREATE OBJECT o_pedro.

"Nasci Ana
CREATE OBJECT o_ana.

"Pedro recebe o nome
o_pedro->set_nome( 'Pedro' ).

"Ana recebe o nome
o_ana->set_nome( 'Ana' ).

"Pedro faz 4 anivers√°rios
DO 4 TIMES.
  o_pedro->fazer_aniversario( ).
ENDDO.

"Ana faz 2 anivers√°rios
DO 2 TIMES.
  o_ana->fazer_aniversario( ).
ENDDO.
Galera, por hoje √© s√≥‚Ä¶
Qualquer duvida, sugest√£o ou reclama√ß√£o s√≥ comentar. So n√£o vale ficar Zombizando por aee‚Ä¶
Abra√ßos a todos que aceitaram o desafio de utilizar apenas OO.



Coment√°rios:
Renan Arrieiro (23/06/2016 16:11): Tem como criar os getters e setters autom√°tico de acordo com os atributos pelo sapgui ? abra√ßo
  Mauro Laranjeira (23/06/2016 16:22): Renan, Com grande pesar no cora√ß√£o que te respondo, nem com reza braba =( Ouvi dizer que no ABAP 7.5 sera poss√≠vel, o eclipse ja tem isso h√° anos.
    Custodio de Oliveira (23/06/2016 20:26): So usando persintent class. Mas voce nao quer fazer isso, acredite.
    Renan Arrieiro (23/06/2016 16:29): Eu treino no MINI SAP ent√£o n√£o da para usar eclipse e na empresa ainda n√£o tenho as manha para trocar o ide, que √© o SAPGUI, ent√£o zumbizei =(.
    Custodio de Oliveira (23/06/2016 20:26): So usando persintent class. Mas voce nao quer fazer isso, acredite.
    Renan Arrieiro (23/06/2016 16:29): Eu treino no MINI SAP ent√£o n√£o da para usar eclipse e na empresa ainda n√£o tenho as manha para trocar o ide, que √© o SAPGUI, ent√£o zumbizei =(.
  Mauro Laranjeira (23/06/2016 16:22): Renan, Com grande pesar no cora√ß√£o que te respondo, nem com reza braba =( Ouvi dizer que no ABAP 7.5 sera poss√≠vel, o eclipse ja tem isso h√° anos.
    Custodio de Oliveira (23/06/2016 20:26): So usando persintent class. Mas voce nao quer fazer isso, acredite.
    Renan Arrieiro (23/06/2016 16:29): Eu treino no MINI SAP ent√£o n√£o da para usar eclipse e na empresa ainda n√£o tenho as manha para trocar o ide, que √© o SAPGUI, ent√£o zumbizei =(.
    Custodio de Oliveira (23/06/2016 20:26): So usando persintent class. Mas voce nao quer fazer isso, acredite.
    Renan Arrieiro (23/06/2016 16:29): Eu treino no MINI SAP ent√£o n√£o da para usar eclipse e na empresa ainda n√£o tenho as manha para trocar o ide, que √© o SAPGUI, ent√£o zumbizei =(.
Paulo Macedo (29/10/2014 15:32): Boa tarde mauro‚Ä¶ me aprofundando um poko mais, teria como eu pegar 4 parametros diferentes (entrado pelo usuario) importar os mesmos para a classe ( onde serao tratados) e devolver os mesmos diretamente para um range (ct_dt_inicial type range of date)?
  Mauro Laranjeira (29/10/2014 15:40): Ol√° meu caro amigo. Tem varias formas de fazer isso. Vc pode criar uma classe com um set_valor.. e chamar esse set_valor 4 vezes, depois utilizar um get_range para pegar o range montado. Vc tamb√©m pode ter um m√©todo que recebe 4 par√¢metros de importing, monta o seu range e exporta. Porem para o get_range o par√¢metro de sa√≠da tem que ser do tipo exporting. Caso seja uma tabela e n√£o um range, exite a aba Tipos dentro da classe, que vc pode fazer este tipo de declara√ß√£o. Espero ter ajudado. Abs.
    Paulo Macedo (29/10/2014 15:46): Obrigado mauro, ja deu uma clariada  boa. Muito obrigado
    Paulo Macedo (29/10/2014 15:46): Obrigado mauro, ja deu uma clariada  boa. Muito obrigado
  Mauro Laranjeira (29/10/2014 15:40): Ol√° meu caro amigo. Tem varias formas de fazer isso. Vc pode criar uma classe com um set_valor.. e chamar esse set_valor 4 vezes, depois utilizar um get_range para pegar o range montado. Vc tamb√©m pode ter um m√©todo que recebe 4 par√¢metros de importing, monta o seu range e exporta. Porem para o get_range o par√¢metro de sa√≠da tem que ser do tipo exporting. Caso seja uma tabela e n√£o um range, exite a aba Tipos dentro da classe, que vc pode fazer este tipo de declara√ß√£o. Espero ter ajudado. Abs.
    Paulo Macedo (29/10/2014 15:46): Obrigado mauro, ja deu uma clariada  boa. Muito obrigado
    Paulo Macedo (29/10/2014 15:46): Obrigado mauro, ja deu uma clariada  boa. Muito obrigado
Juliana (22/10/2014 19:56): Fiz este procedimento tamb√©m, mas recebo o mesmo retorno.
Juliana (22/10/2014 19:41): Ol√° Mauro Laranjeira, estou tentanto criar a classe seguindo os passos, por√©m ao ativar sempre recebo o retorno informando que algum m√©todo n√£o foi implementado. Poderia me ajudar? Grata.
  Mauro Laranjeira (22/10/2014 19:44): Certo Juliana, da 2 cliques no m√©todo que esta exibindo mensagem de erro, e ativa. Fala ae se rolou üòâ
  Mauro Laranjeira (22/10/2014 19:44): Certo Juliana, da 2 cliques no m√©todo que esta exibindo mensagem de erro, e ativa. Fala ae se rolou üòâ
Renan (18/07/2013 09:39): E ai Pessoal, Eu nunca dei muita bola pra OO nem UML nem essas ‚Äúbagacera‚Äù, porque heran√ßa, encapsulamento, polimorfismo e etc nunca fizeram sentido nem valiam o esfor√ßo de programar OO somente por programar OO. Mas meu pensamento mudou a partir do momento que li esse artigo: *Especialmente quanto aos ‚Äúsintomas de apodrecimento de software‚Äù http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf Nesse mesmo link acima, √© poss√≠vel encontrar muitos motivos para pensar e ‚Äúviver‚Äù OO. Especialmente com os princ√≠pios introdut√≥rios OCP e DIP. Nada de OO fez sentido antes de eu ler isso, isso foi primordial e essencial para eu aceitar OO como uma necessidade. Al√©m disso, recomento o site zevolving.com , tem muito material abap OO avan√ßado, especialmente sobre design patterns. Renan
  Wesley Fernandes (16/01/2017 17:00): Valeu Mauro pelo post! Compartilho da sua opini√£o, e o que tem me ajudado muito a entender isso tudo s√£o os posts do BAr8, eles fizeram uma sequencia bacana sobre S.O.L.I.D https://bar8.com.br/abap-oo-solid-a8bfd8c5191b Flw[]
  Wanderson (20/10/2013 14:57): Concordo com o Renan, os conceitos de OCP e DIP n√£o s√≥ ajudam a entendermos a import√¢ncia da programa√ß√£o orientada a objetos como nos guiam para realiz√°-la de forma eficiente.
  Wesley Fernandes (16/01/2017 17:00): Valeu Mauro pelo post! Compartilho da sua opini√£o, e o que tem me ajudado muito a entender isso tudo s√£o os posts do BAr8, eles fizeram uma sequencia bacana sobre S.O.L.I.D https://bar8.com.br/abap-oo-solid-a8bfd8c5191b Flw[]
  Wanderson (20/10/2013 14:57): Concordo com o Renan, os conceitos de OCP e DIP n√£o s√≥ ajudam a entendermos a import√¢ncia da programa√ß√£o orientada a objetos como nos guiam para realiz√°-la de forma eficiente.
Gustavo Venceslau (17/07/2013 11:40): J√° tem a parte 3 ?
Camila (10/09/2012 14:43): Excelente a explica√ß√£o, Mauro. Muito obrigada. Fico em d√∫vida ainda quanto a por na pr√°tica. Como come√ßa, pegar um gap e fazer em OO. Tem alguma restri√ß√£o quanto a decis√£o de fazer em OO ou estruturado? Peguei um programa seu para fazer manuten√ß√£o h√° uns 2 anos e fiquei perdida na √©poca . Agora vc me ajudou hehehe‚Ä¶ Valeu
  Mauricio Cruz (11/09/2012 10:14): S√≥ pra constar eu dei risada quando voc√™ falou que sofreu com um programa OO do Mauro. Algum dia espero algu√©m falar isso de um programa meu tb mwahahahaha (pega essa risada mal√©fica üòÄ )
  Mauricio Cruz (11/09/2012 10:14): S√≥ pra constar eu dei risada quando voc√™ falou que sofreu com um programa OO do Mauro. Algum dia espero algu√©m falar isso de um programa meu tb mwahahahaha (pega essa risada mal√©fica üòÄ )
Fl√°vio Furlan (19/07/2012 18:19): Muito boa explica√ß√£o, gostei tamb√©m do exemplo do Maur√≠cio sobre os m√©todos de acesso, GET e SET. No mundo OO, os m√©todos GET e SET s√£o amplamente usados, justamente para proteger os dados da classe. Podem parecer burocr√°ticos, mas te d√° um  chance de programar alguma regra de neg√≥cio na sa√≠da do m√©todo. Por exemplo no Cocoa (programando para iPhone), voc√™ tem uma declara√ß√£o especial que voc√™ coloca no equivalente ao CLASS‚Ä¶ DEFINITION do Objective-C que faz com os m√©todos GET e SET sejam declarados automaticamente: @synthesize √ìtimo artigo! Abra√ßos!
  Mauricio Cruz (23/07/2012 10:24): Em outras linguagens √© bem comum mesmo usar GET e SET para praticamente tudo. √â engra√ßado que, quanto mais eu estudo outras linguagens, mais eu percebo que a galera do ABAP ‚Äúse isola‚Äù porque quer. D√° pra fazer tudo (ou quase tudo), com a mesma qualidade. Eu s√≥ sinto falta de uma IDE melhor para escrever o c√≥digo, n√£o acho a SE80 suficiente no quesito produtividade. Ela √© boa para v√°rias coisas, mas pra escrever o c√≥digo ainda acho um pouco pobre. Por√©m, na nova vers√£o do AS o novo editor vem com umas coisas animais para acelerar o desenvolvimento com classes (meu minisap que o diga üòÄ ). Abra√ßos!
    Custodio (24/07/2012 01:26): Vou insistir no meu ponto: Setters = ok, Getters = superfluo. Se voce quer olhar outras linguagens, vera que get eh praticamente apenas para retornar o valor do atributo. Implementar business logic no get eu nunca vi. E como o ABAP te proporciona o attributo public read only, por que nao usa-lo? Eh uma vantagem em relacao a outras linguagens. Nao eh porque os outros fazem que temos que fazer tb, ne? Sobre a IDE, vc ja deve ter visto que o ADT/AiE esta disponivel. Estou com o pe atras, mas vou tentar na boa vontade. Mas acho que era melhor investir mais na SE80 que arrumar uma outra ferramenta‚Ä¶
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
    Custodio (24/07/2012 01:26): Vou insistir no meu ponto: Setters = ok, Getters = superfluo. Se voce quer olhar outras linguagens, vera que get eh praticamente apenas para retornar o valor do atributo. Implementar business logic no get eu nunca vi. E como o ABAP te proporciona o attributo public read only, por que nao usa-lo? Eh uma vantagem em relacao a outras linguagens. Nao eh porque os outros fazem que temos que fazer tb, ne? Sobre a IDE, vc ja deve ter visto que o ADT/AiE esta disponivel. Estou com o pe atras, mas vou tentar na boa vontade. Mas acho que era melhor investir mais na SE80 que arrumar uma outra ferramenta‚Ä¶
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
  Mauricio Cruz (23/07/2012 10:24): Em outras linguagens √© bem comum mesmo usar GET e SET para praticamente tudo. √â engra√ßado que, quanto mais eu estudo outras linguagens, mais eu percebo que a galera do ABAP ‚Äúse isola‚Äù porque quer. D√° pra fazer tudo (ou quase tudo), com a mesma qualidade. Eu s√≥ sinto falta de uma IDE melhor para escrever o c√≥digo, n√£o acho a SE80 suficiente no quesito produtividade. Ela √© boa para v√°rias coisas, mas pra escrever o c√≥digo ainda acho um pouco pobre. Por√©m, na nova vers√£o do AS o novo editor vem com umas coisas animais para acelerar o desenvolvimento com classes (meu minisap que o diga üòÄ ). Abra√ßos!
    Custodio (24/07/2012 01:26): Vou insistir no meu ponto: Setters = ok, Getters = superfluo. Se voce quer olhar outras linguagens, vera que get eh praticamente apenas para retornar o valor do atributo. Implementar business logic no get eu nunca vi. E como o ABAP te proporciona o attributo public read only, por que nao usa-lo? Eh uma vantagem em relacao a outras linguagens. Nao eh porque os outros fazem que temos que fazer tb, ne? Sobre a IDE, vc ja deve ter visto que o ADT/AiE esta disponivel. Estou com o pe atras, mas vou tentar na boa vontade. Mas acho que era melhor investir mais na SE80 que arrumar uma outra ferramenta‚Ä¶
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
    Custodio (24/07/2012 01:26): Vou insistir no meu ponto: Setters = ok, Getters = superfluo. Se voce quer olhar outras linguagens, vera que get eh praticamente apenas para retornar o valor do atributo. Implementar business logic no get eu nunca vi. E como o ABAP te proporciona o attributo public read only, por que nao usa-lo? Eh uma vantagem em relacao a outras linguagens. Nao eh porque os outros fazem que temos que fazer tb, ne? Sobre a IDE, vc ja deve ter visto que o ADT/AiE esta disponivel. Estou com o pe atras, mas vou tentar na boa vontade. Mas acho que era melhor investir mais na SE80 que arrumar uma outra ferramenta‚Ä¶
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
      Mauricio Cruz (24/07/2012 08:02): Interessante ver que voc√™ n√£o gosta do GET, ele praticou bully com voc√™ quando voc√™ estava na escola? üòÄ üòÄ Sempre usei o GET e vou continuar usando. Usar o READ-ONLY √© mais perform√°tico, porque vai matar N chamadas que voc√™ faria no m√©todo GET_blablabla. Por√©m, isso tamb√©m diz que o programa que implementa a classe vai ter que saber como e quando utilizar aquele valor. Supondo que eu queira que um valor somente exista quando eu for busc√°-lo, posso implementar a l√≥gica do select num m√©todo que vai ser executado antes do valor ser retornado no GET, caso o atributo esteja vazio. Gosto da id√©ia de ter possibilidades, e, para mim, √© exatamente isso que o GET faz. Mas n√£o acho errado usar READ-ONLY n√£o, se voc√™ gosta vai na f√©. IO importante √© ser feliz üôÇ
Custodio (29/06/2012 04:21): Excelente post e boa pergunta do rapazinho ae üôÇ Eu costumo nao usar os GETs, apenas os SETs (exceto quando uso persistence class, ai nao tem jeito). Defino os attributos como publicos e read-only e esta tudo certo. Nunca vi em classe nenhuma nenhum GET que nao seja: method get_abc returning abc. abc = me->abc. end_method. Se alguem achar me apresenta por favor üòÄ Ja os SETs sao sim importantes, quase que indispensaveis. Abracos.
Fawcs (27/06/2012 19:10): p√¥, que preconceito √© esse com pessoas de mais de 100 anos? Brincadeiras √† parte, eu fico meio na d√∫vida com esses m√©todos set e get.. qual √© a grande vantagem deles? pq n√£o colocar o atributo logo como p√∫blico? A √∫nica raz√£o que eu vejo para isso seria colocar regras de neg√≥cio no m√©todo set, correto?
  Mauricio Cruz (27/06/2012 21:28): Divertida a sua pergunta üôÇ Essa √© uma d√∫vida comum para as pessoas que n√£o est√£o familiarizadas com OO. O Mauro e outros podem depois complementar minha resposta: Com os m√©todos get e set, quem controla como o atributo vai ser lido/gravado √© a classe. Voc√™ garante que o valor do atributo sempre vai ser gravado do jeito que a classe quiser, e que o nome retornado vai ser o que a classe quiser. Imagine que, voc√™ pegou essa classe ZCL_PESSOA e a utilizou por todo o sistema. Voc√™ busca o nome no objeto O_PESSOA pelo GET_NOME, e faz o print desse nome na tela, em v√°rios programas/telas/forms/m√©todos diferentes. Um belo dia, algu√©m vem para voc√™ e diz que, a partir de agora, os nomes tem que aparecer sempre em mai√∫sculo. Como √© a classe ZCL_PESSOA que controla como o nome vai ser lido, atrav√©s do m√©todo GET_NOME, tudo que voc√™ precisa fazer √© transformar o nome em mai√∫sculo dentro daquele m√©todo, e todo o seu sistema vai estar funcionando. Por√©m, se voc√™ estivesse acessando diretamente um atributo p√∫blico, voc√™ teria que transformar TODA SANTA VEZ o valor do nome para mai√∫sculo, o que √© tosco demais, n√£o √©? Desculpe se o exemplo estiver confuso, est√° tarde e estou com sono üòÄ hahahaha Abra√ßos!
    Fawcs (28/06/2012 10:30): Entendi, √© quase o que eu falei s√≥ que ao contr√°rio(wtf!)! Entao voc√™ pode tanto fazer valida√ß√µes no m√©todo SET quanto fazer defini√ß√µes de output no get (convers√£o de unidades?). Ah sim, uma bruxaria que eu aprendi ontem no SAP. Se voc√™ declarar o parametro de importa√ß√£o do m√©todo set_nome como TYPE c. ele vai formatar autom√°ticamente o tipo na hora da importa√ß√£o! Lembrei disso olhando os importing ali do m√©todo set_nome =)
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
    Fawcs (28/06/2012 10:30): Entendi, √© quase o que eu falei s√≥ que ao contr√°rio(wtf!)! Entao voc√™ pode tanto fazer valida√ß√µes no m√©todo SET quanto fazer defini√ß√µes de output no get (convers√£o de unidades?). Ah sim, uma bruxaria que eu aprendi ontem no SAP. Se voc√™ declarar o parametro de importa√ß√£o do m√©todo set_nome como TYPE c. ele vai formatar autom√°ticamente o tipo na hora da importa√ß√£o! Lembrei disso olhando os importing ali do m√©todo set_nome =)
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
  Mauricio Cruz (27/06/2012 21:28): Divertida a sua pergunta üôÇ Essa √© uma d√∫vida comum para as pessoas que n√£o est√£o familiarizadas com OO. O Mauro e outros podem depois complementar minha resposta: Com os m√©todos get e set, quem controla como o atributo vai ser lido/gravado √© a classe. Voc√™ garante que o valor do atributo sempre vai ser gravado do jeito que a classe quiser, e que o nome retornado vai ser o que a classe quiser. Imagine que, voc√™ pegou essa classe ZCL_PESSOA e a utilizou por todo o sistema. Voc√™ busca o nome no objeto O_PESSOA pelo GET_NOME, e faz o print desse nome na tela, em v√°rios programas/telas/forms/m√©todos diferentes. Um belo dia, algu√©m vem para voc√™ e diz que, a partir de agora, os nomes tem que aparecer sempre em mai√∫sculo. Como √© a classe ZCL_PESSOA que controla como o nome vai ser lido, atrav√©s do m√©todo GET_NOME, tudo que voc√™ precisa fazer √© transformar o nome em mai√∫sculo dentro daquele m√©todo, e todo o seu sistema vai estar funcionando. Por√©m, se voc√™ estivesse acessando diretamente um atributo p√∫blico, voc√™ teria que transformar TODA SANTA VEZ o valor do nome para mai√∫sculo, o que √© tosco demais, n√£o √©? Desculpe se o exemplo estiver confuso, est√° tarde e estou com sono üòÄ hahahaha Abra√ßos!
    Fawcs (28/06/2012 10:30): Entendi, √© quase o que eu falei s√≥ que ao contr√°rio(wtf!)! Entao voc√™ pode tanto fazer valida√ß√µes no m√©todo SET quanto fazer defini√ß√µes de output no get (convers√£o de unidades?). Ah sim, uma bruxaria que eu aprendi ontem no SAP. Se voc√™ declarar o parametro de importa√ß√£o do m√©todo set_nome como TYPE c. ele vai formatar autom√°ticamente o tipo na hora da importa√ß√£o! Lembrei disso olhando os importing ali do m√©todo set_nome =)
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
    Fawcs (28/06/2012 10:30): Entendi, √© quase o que eu falei s√≥ que ao contr√°rio(wtf!)! Entao voc√™ pode tanto fazer valida√ß√µes no m√©todo SET quanto fazer defini√ß√µes de output no get (convers√£o de unidades?). Ah sim, uma bruxaria que eu aprendi ontem no SAP. Se voc√™ declarar o parametro de importa√ß√£o do m√©todo set_nome como TYPE c. ele vai formatar autom√°ticamente o tipo na hora da importa√ß√£o! Lembrei disso olhando os importing ali do m√©todo set_nome =)
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos
      Lucas Sales (17/06/2016 13:31): E aqui estamos basicamente 4 anos depois deste post com este coment√°rio ir ao ar para comentar que sabia que j√° havia lido sobre esse tema de GET e SET em algum lugar, lembro que na √©poca a d√∫vida do fawcs era exatamente a minha, mas agora estamos em 2016 e ainda vejo posts como esse: https://bar8.com.br/o-que-%C3%A9-um-objeto-mesmo-7650ce5c59d2#.xptip0q6s Neste post √© comentado sobre SET e GET e seu uso indiscriminado. Mas o mais incr√≠vel/bizarro √© posts como esse parecerem extremamente novo, sofisticado e alguns diriam at√© de outro mundo, ABAPer √© realmente um ser humaninho muito engra√ßado, ser√° que daqui a 4 anos ainda vamos ter conceitos t√£o simples como este de OO sendo t√£o obscuros?
      Mauro Laranjeira (28/06/2012 11:32): Fawcs, Fiquei muito feliz que vc chegou nessa conclus√£o, s√©rio, s√≥ por isso, ja acho que o post j√° valeu a pena =D Vlw e Abra√ßos